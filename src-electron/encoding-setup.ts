/**
 * ุฅุนุฏุงุฏ ุชุฑููุฒ UTF-8 ููู Electron ูู Windows
 *
 * ูุฐุง ุงูููู ูุญู ูุดููุฉ ุนุฑุถ ุงููุตูุต ุงูุนุฑุจูุฉ ูู console
 * ุจูุงุกู ุนูู ุงููุซุงุฆู ุงูุฑุณููุฉ ูู Electron ูNode.js
 */

import { spawn } from 'child_process';

/**
 * ุฅุนุฏุงุฏ ุชุฑููุฒ UTF-8 ููู console ูู Windows
 */
export function setupUTF8Encoding(): void {
  // ุงูุชุญูู ูู ูุธุงู ุงูุชุดุบูู
  if (process.platform !== 'win32') {
    return; // ูุฐุง ุงูุฅุนุฏุงุฏ ุฎุงุต ุจู Windows ููุท
  }

  try {
    // 1. ุชุนููู ุชุฑููุฒ UTF-8 ููู stdout ู stderr
    if (process.stdout && typeof process.stdout.setEncoding === 'function') {
      process.stdout.setEncoding('utf8');
    }

    if (process.stderr && typeof process.stderr.setEncoding === 'function') {
      process.stderr.setEncoding('utf8');
    }

    // 2. ุชุนููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ููุชุฑููุฒ
    process.env.LANG = 'en_US.UTF-8';
    process.env.LC_ALL = 'en_US.UTF-8';
    process.env.PYTHONIOENCODING = 'utf-8';
    process.env.NODE_OPTIONS = '--input-type=module --experimental-modules';

    // 3. ุชุดุบูู ุฃูุฑ chcp ูุชุนููู code page ุฅูู UTF-8
    setWindowsCodePage();

    console.log('โ ุชู ุฅุนุฏุงุฏ ุชุฑููุฒ UTF-8 ุจูุฌุงุญ');
  } catch (error) {
    console.error('โ ูุดู ูู ุฅุนุฏุงุฏ ุชุฑููุฒ UTF-8:', error);
  }
}

/**
 * ุชุนููู code page ูู Windows ุฅูู UTF-8
 */
function setWindowsCodePage(): void {
  try {
    // ุชุดุบูู ุฃูุฑ chcp 65001 ูุชุนููู UTF-8
    const chcp = spawn('chcp', ['65001'], {
      stdio: 'ignore',
      shell: true,
      windowsHide: true,
    });

    chcp.on('error', () => {
      // ุชุฌุงูู ุงูุฃุฎุทุงุก - ูุฏ ูุง ูููู chcp ูุชููุฑุงู
    });

    chcp.on('close', (code) => {
      if (code === 0) {
        console.log('โ ุชู ุชุนููู Windows Code Page ุฅูู UTF-8');
      }
    });
  } catch {
    // ุชุฌุงูู ุงูุฃุฎุทุงุก
  }
}

/**
 * ุฅุนุฏุงุฏ console.log ููุฏุนู UTF-8 ุจุดูู ุฃูุถู
 */
export function setupConsoleUTF8(): void {
  // ุญูุธ ุงููุธุงุฆู ุงูุฃุตููุฉ
  const originalLog = console.log;
  const originalError = console.error;
  const originalWarn = console.warn;
  const originalInfo = console.info;

  // ุฅุนุงุฏุฉ ุชุนุฑูู console.log ูุฏุนู UTF-8
  console.log = (...args: unknown[]) => {
    const message = args
      .map((arg) => (typeof arg === 'string' ? arg : JSON.stringify(arg)))
      .join(' ');

    try {
      // ูุญุงููุฉ ูุชุงุจุฉ ุงููุต ุจุชุฑููุฒ UTF-8
      if (process.stdout && process.stdout.write) {
        process.stdout.write(message + '\n', 'utf8');
      } else {
        originalLog(...args);
      }
    } catch {
      // ูู ุญุงูุฉ ุงููุดูุ ุงุณุชุฎุฏู ุงูุทุฑููุฉ ุงูุฃุตููุฉ
      originalLog(...args);
    }
  };

  // ุฅุนุงุฏุฉ ุชุนุฑูู console.error
  console.error = (...args: unknown[]) => {
    const message = args
      .map((arg) => (typeof arg === 'string' ? arg : JSON.stringify(arg)))
      .join(' ');

    try {
      if (process.stderr && process.stderr.write) {
        process.stderr.write('ERROR: ' + message + '\n', 'utf8');
      } else {
        originalError(...args);
      }
    } catch {
      originalError(...args);
    }
  };

  // ุฅุนุงุฏุฉ ุชุนุฑูู console.warn
  console.warn = (...args: unknown[]) => {
    const message = args
      .map((arg) => (typeof arg === 'string' ? arg : JSON.stringify(arg)))
      .join(' ');

    try {
      if (process.stderr && process.stderr.write) {
        process.stderr.write('WARN: ' + message + '\n', 'utf8');
      } else {
        originalWarn(...args);
      }
    } catch {
      originalWarn(...args);
    }
  };

  // ุฅุนุงุฏุฉ ุชุนุฑูู console.info
  console.info = (...args: unknown[]) => {
    const message = args
      .map((arg) => (typeof arg === 'string' ? arg : JSON.stringify(arg)))
      .join(' ');

    try {
      if (process.stdout && process.stdout.write) {
        process.stdout.write('INFO: ' + message + '\n', 'utf8');
      } else {
        originalInfo(...args);
      }
    } catch {
      originalInfo(...args);
    }
  };

  console.log('โ ุชู ุฅุนุฏุงุฏ console ูุฏุนู UTF-8');
}

/**
 * ุงุฎุชุจุงุฑ ุนุฑุถ ุงููุตูุต ุงูุนุฑุจูุฉ
 */
export function testArabicDisplay(): void {
  console.log('๐งช ุงุฎุชุจุงุฑ ุนุฑุถ ุงููุตูุต ุงูุนุฑุจูุฉ:');
  console.log('ูุฑุญุจุงู ุจู ูู ุชุทุจูู ุฅุฏุงุฑุฉ ููุงุนุฏ ุงูุจูุงูุงุช');
  console.log('ูุธุงู ุงูููุงุชูุฑ ุงูุฅููุชุฑูููุฉ ุงููุชูุงูู ูุน ZATCA');
  console.log('ุชู ุชุญููู ุงูุชุทุจูู ุจูุฌุงุญ โ');
  console.info('ูุนูููุงุช: ุงููุธุงู ูุนูู ุจุดูู ุตุญูุญ');
  console.warn('ุชุญุฐูุฑ: ูุฐุง ูุฌุฑุฏ ุงุฎุชุจุงุฑ');
  console.error('ุฎุทุฃ ุชุฌุฑูุจู: ูุง ุชูููุ ูุฐุง ูุฌุฑุฏ ุงุฎุชุจุงุฑ');
}
